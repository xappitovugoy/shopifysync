// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("admin") // "admin", "user"
  isActive  Boolean  @default(true)
  lastLogin DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id              String   @id @default(cuid())
  shopifyId       String   @unique
  sku             String?
  title           String
  description     String?
  weight          Float?
  quantity        Int      @default(0)
  wholesaleCost   Float?
  price           Float?
  imageUrl        String?
  tags            String?
  vendor          String?
  productType     String?
  status          String   @default("active")
  lastSyncedAt    DateTime?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("products")
}

model SyncLog {
  id              String   @id @default(cuid())
  operation       String   // "sync", "export", "manual"
  status          String   // "pending", "completed", "failed"
  productsCount   Int      @default(0)
  duration        Int?     // in milliseconds
  errorMessage    String?
  metadata        String?  // JSON string for additional data
  createdAt       DateTime @default(now())

  @@map("sync_logs")
}

model EmailLog {
  id              String   @id @default(cuid())
  to              String
  subject         String
  body            String
  status          String   // "sent", "failed", "pending"
  errorMessage    String?
  type            String   // "low_stock", "sync_report", "manual"
  createdAt       DateTime @default(now())

  @@map("email_logs")
}

model Configuration {
  id              String   @id @default(cuid())
  key             String   @unique
  value           String
  description     String?
  category        String   @default("general") // "general", "shopify", "email", "google", "sync"
  isSensitive     Boolean  @default(false)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("configurations")
}